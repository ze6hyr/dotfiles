unbind r
bind r source-file ~/.tmux.conf
#unbind C-b

#set -g prefix `
#set -g prefix -
set -g mouse off

#  this will set 0 to 1 index
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

#  for yanking from tmux just like vim keybindings
# set vi-mode
set-window-option -g mode-keys vi

# set pane-border-lines set-option
# single, double, heavy, simple, number
set -g pane-border-lines simple
# set -g pane-border-format "â”€ #{pane_id} â”€"

set -g focus-events on
# Inactive window style
#set -g window-status-style fg=white,bg=black
# Active window style (make it pop!)
#set -g window-status-current-style fg=black,bg=green

# Inactive window style
# Active window style (make it pop!)
#set -g window-status-style fg="#908caa"
#set -g status-style bg='#2a273f',fg='#908caa'
#fg="#f2e984"
#set -g window-status-last-style fg="#908caa"
#set -g window-status-current-style fg="#908caa"

# Optional: Custom formatting (shows window index and name)
#regular window (Inactive)
#set -g window-status-format "#I:#W"
#Active window (add a star *)
#set -g window-status-current-format "#I:#W*"

#set -g cursor-style block
#setw -g mode-style bg=colour237,fg=colour231

# Show active pane ID or command in the status-right
#set -g status-left "Pane: #(tmux display-message -p '#{pane_id}') | #{pane_current_command} | %H:%M"
#set -g status-left "Active Pane: #{pane_index} | #{pane_current_command}"


# Set pane border colors
#set -g pane-border-style fg=grey
#set -g pane-active-border-style fg=brightgreen


# clipboard keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selected-and-cancel

bind -n ^ copy-mode

# Opens panes current directory
bind "'" split-window -v -c "#{pane_current_path}"
bind '.' split-window -h -c "#{pane_current_path}"

#bind -n M-H previous-window
#bind -n M-L next-window
bind -n M-p previous-window
bind -n M-n next-window
bind -n M-m last-window
bind -n M-b last-pane
#bind -n P previous-session
#bind -n N next-session
#bind -n M-w switch-client -l
#bind "g" new-session 

# vim-like pane switching
#bind -r ^ last-window
#bind -r k select-pane -U
#bind -r j select-pane -D
#bind -r h select-pane -L
#bind -r l select-pane -R

bind -r k resize-pane -U +5
bind -r j resize-pane -D +5
bind -r h resize-pane -L +10
bind -r l resize-pane -R +10

# Status bar styling
set -g status-style bg='#1f1d2e',fg='#908caa'
#set -g status-style bg='#2a273f',fg='#908caa'
#set -g status-style bg='#2a273f',fg='#f2e984'
# Set status-right with custom text
 set -g status-position top

# Set tmux statusline to include the current working directory

 set -g status-right " %I:%M%P#(~/.local/bin/battery1) #(~/.local/bin/cpu-bar1) #(~/.local/bin/internet1) %a %d-%m %b"
 set -g status-interval 1
# set -g status-right "#(pwd) | %Y-%m-%d %H:%M"
# set -g status-right "#(~/.local/bin/battery1) %H:%M %d-%b-%y"
#set-option -g status-right "%I:%M%p   %d-%m-%y "
# set-option -g status-right "[it_feels_so_empty_without_me]" 
# set-option -g status-right "atta1212@ [I_am_fast_af_boi]"

#set-option -g status-right "%a %d %b | %I %M %p "
#set -g status-interval 60  # Refresh every minute

# Use TrueColor in tmux (requires TERM to support it)
# Enable 256-color mode and TrueColor support
 set -g default-terminal "xterm-256color"
 set -g terminal-overrides ",xterm-256color*:Tc"
 set -as terminal-overrides ',xterm-256color:Ss=\E[%p1%d q:Se=\E[2 q'

 #set-hook -g client-attached 'run-shell "printf \"\033[1 q\""'

# set -g default-terminal "term-256color"
# set -g terminal-overrides ",term-256color*:Tc"

#  Save tmux state every 5 minutes
set -g @continuum-save-interval '15'
# Show a save message in the status bar
# set -g status-right "#{status-right} | Saved at #{time}"

#  List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

#  Bind prefix + a to save the tmux-continuum session and show a message
# bind-key a run-shell '~/.tmux/plugins/tmux-continuum/scripts/continuum_save.sh; tmux display-message "Session-saved! ðŸ˜Š"'
bind a run-shell '~/.local/bin/tmux-resurrect-save;'

# forget the find window.  That is for chumps
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# bind-key -r i run-shell "tmux neww tmux-cht.sh"

#bind-key -r G run-shell "~/.local/bin/tmux-sessionizer ~/zephyr/php/"
#bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/zephyr/php/clones/"
#bind-key -r R run-shell "~/.local/bin/tmux-sessionizer ~/zephyr/php/try/"
# bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/work/hpack"
#bind-key -r H run-shell "~/.local/bin/tmux-sessionizer ~/zephyr/js/"
#bind-key -r T run-shell "~/.local/bin/tmux-sessionizer ~/zephyr/php/republic/"
#bind-key -r N run-shell "~/.local/bin/tmux-sessionizer ~/awebcode/back-edn/hhhp/"
#bind-key -r S run-shell "~/.local/bin/tmux-sessionizer ~/awebcode/front-edn/javas/"

#  Automatically restore tmux state after reboot
set -g @continuum-restore 'on'

# Reduce escape-time for faster key combinations
set -s escape-time 0
run '~/.tmux/plugins/tpm/tpm'
